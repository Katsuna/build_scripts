#!/bin/bash
#
#     Copyright (C) 2017 The Katsuna Project
#     Copyright (C) 2017 KreAch3R
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#          http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.

# Version: 0.6

# Usage:
# $ katsuna-release DEVICE_NAME (all|angler|bullhead...) JENKINS_INSTANCE (true|false) PUBLISH_BOOL (true|false)
# e.g. katsuna-release "bullhead" "true"

# Variables DO NOT EDIT
device=$1
jenkins=$2
publish=$3
# It's Oreo time
version=oreo

# Color output
green=`tput setaf 2`
cyan=`tput setaf 6`
red=`tput setaf 1`
yellow=`tput setaf 3`
reset=`tput sgr0`

# Setting up generic script failure guards
set -e
set -o pipefail

# Start of the main script

# Check for three arguments, else abort
if [ $# -ne 3 ]; then
    echo "${red}Illegal number of parameters!${reset}"
    echo "${yellow}You should specify three arguments, DEVICE_NAME(all|angler|bullhead...) JENKINS_INSTANCE (true|false) PUBLISH_BOOL (true|false)"
    echo "e.g. 'katsuna-release bullhead true false'${reset}"
    echo "Your input: katsuna-release $device $jenkins $publish"
    exit 1
fi

if [ "$device" == "all" ]; then
  # Only these ones are supported right now
  # bullhead first to catch up on bad public builds early
  devices=( bullhead taimen angler )
else
  devices=( $device )
fi

# Start iteration between all devices or a specific one (per argument)
for i in "${devices[@]}"; do
    echo "${yellow}Starting Release build for $i...${reset}"
    # JENKINS_INSTANCE = true, RELEASE_BOOL = true
    katsuna-build $i prod $version $jenkins true

    if [[ $publish == "true" ]]; then
        # Publish the new release
        katsuna-publish-release $device
    fi
done

echo "${green}katsuna-release for $device finished!${reset}"
